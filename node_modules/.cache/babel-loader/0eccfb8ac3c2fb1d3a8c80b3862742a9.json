{"ast":null,"code":"var _jsxFileName = \"/Users/nghiepphan/code/tham-khao/react-moveable-with-full-drag-select/src/guides/Guide.tsx\";\nimport * as React from \"react\";\nimport { ref, refs, prefixCSS } from \"framework-utils\";\nimport Dragger from \"@daybrush/drag\";\nimport { hasClass, addClass, removeClass } from \"@daybrush/utils\";\nimport styled from \"react-css-styled\";\nimport Ruler from \"../ruler\";\nimport { GUIDES, GUIDE, DRAGGING, ADDER, CURRENT } from \"./consts\";\nimport { prefix } from \"./utils\";\nconst GuidesElement = styled(\"div\", prefixCSS(\"scena-\", \"\\n{\\n    position: relative;\\n}\\ncanvas {\\n    position: relative;\\n}\\n.guides {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    will-change: transform;\\n    z-index: 120;\\n}\\n:host.horizontal .guides {\\n    width: 100%;\\n    height: 0;\\n    top: 0;\\n}\\n:host.vertical .guides {\\n    height: 100%;\\n    width: 0;\\n    left: 0;\\n}\\n.guide {\\n    position: absolute;\\n    background: cyan;\\n    z-index: 2;\\n}\\n.guide.dragging:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    width: 100%;\\n    height: 100%;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n}\\n:host.horizontal .guide {\\n    width: 100%;\\n    height: 1px;\\n    cursor: row-resize;\\n}\\n:host.vertical .guide {\\n    width: 1px;\\n    height: 100%;\\n    cursor: col-resize;\\n}\\n.mobile :host.horizontal .guide {\\n    transform: scale(1, 2);\\n}\\n.mobile :host.vertical .guide {\\n    transform: scale(2, 1);\\n}\\n:host.horizontal .guide:before {\\n    height: 10px;\\n}\\n:host.vertical .guide:before {\\n    width: 10px;\\n}\\n.adder {\\n    display: none;\\n}\\n.adder.dragging {\\n    display: block;\\n}\\n.current {\\n    font-size: 10px;\\n}\\n\\n.current .horizontal {\\n    margin-left: 25px;\\n}\\n\"));\nexport default class Guides extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      guides: [],\n      currentOffset: 0\n    };\n    this.adderElement = void 0;\n    this.scrollPos = 0;\n    this.ruler = void 0;\n    this.manager = void 0;\n    this.guidesElement = void 0;\n    this.dragger = void 0;\n    this.guideElements = [];\n\n    this.onDragStart = ({\n      datas,\n      clientX,\n      clientY,\n      inputEvent\n    }) => {\n      const isHorizontal = this.props.type === \"horizontal\";\n      const rect = this.guidesElement.getBoundingClientRect();\n      datas.offset = isHorizontal ? rect.top : rect.left;\n      addClass(datas.target, DRAGGING);\n      this.onDrag({\n        datas,\n        clientX,\n        clientY\n      });\n      inputEvent.stopPropagation();\n      inputEvent.preventDefault();\n    };\n\n    this.onDrag = ({\n      datas,\n      clientX,\n      clientY\n    }) => {\n      const type = this.props.type;\n      const isHorizontal = type === \"horizontal\";\n      const nextPos = Math.round((isHorizontal ? clientY : clientX) - datas.offset);\n      datas.target.style.transform = \"\".concat(this.getTranslateName(), \"(\").concat(nextPos, \"px)\");\n      this.setState({\n        currentOffset: nextPos - 20\n      });\n      return nextPos;\n    };\n\n    this.onDragEnd = ({\n      datas,\n      clientX,\n      clientY\n    }) => {\n      const pos = this.onDrag({\n        datas,\n        clientX,\n        clientY\n      });\n      const guides = this.state.guides;\n      const setGuides = this.props.setGuides;\n      const guidePos = Math.round(pos / this.props.zoom);\n      removeClass(datas.target, DRAGGING);\n\n      if (datas.fromRuler) {\n        if (pos >= this.scrollPos && guides.indexOf(guidePos) < 0) {\n          this.setState({\n            guides: [...guides, guidePos]\n          }, () => {\n            setGuides(this.state.guides);\n          });\n        }\n      } else {\n        const index = datas.target.getAttribute(\"data-index\");\n\n        if (pos < this.scrollPos || guides.indexOf(guidePos) > -1) {\n          guides.splice(index, 1);\n        } else {\n          guides[index] = guidePos;\n        }\n\n        this.setState({\n          guides: [...guides]\n        }, () => {\n          setGuides(this.state.guides);\n        });\n      }\n    };\n  }\n\n  render() {\n    const _ref = this.props,\n          className = _ref.className,\n          type = _ref.type,\n          width = _ref.width,\n          height = _ref.height,\n          unit = _ref.unit,\n          zoom = _ref.zoom,\n          style = _ref.style,\n          rulerStyle = _ref.rulerStyle,\n          backgroundColor = _ref.backgroundColor,\n          lineColor = _ref.lineColor,\n          textColor = _ref.textColor;\n    return /*#__PURE__*/React.createElement(GuidesElement, {\n      ref: ref(this, \"manager\"),\n      className: \"\".concat(prefix(\"manager\", type), \" \").concat(className),\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Ruler, {\n      ref: ref(this, \"ruler\"),\n      type: type,\n      width: width,\n      height: height,\n      unit: unit,\n      zoom: zoom,\n      backgroundColor: backgroundColor,\n      lineColor: lineColor,\n      style: rulerStyle,\n      textColor: textColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: GUIDES,\n      ref: ref(this, \"guidesElement\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ADDER,\n      ref: ref(this, \"adderElement\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: CURRENT + \" \" + type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, this.state.currentOffset)), this.renderGuides()));\n  }\n\n  renderGuides() {\n    const _ref2 = this.props,\n          type = _ref2.type,\n          zoom = _ref2.zoom;\n    const translateName = type === \"horizontal\" ? \"translateY\" : \"translateX\";\n    const guides = this.state.guides;\n    this.guideElements = [];\n    return guides.map((pos, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix(\"guide\", type),\n        ref: refs(this, \"guideElements\", i),\n        key: i,\n        \"data-index\": i,\n        style: {\n          transform: \"\".concat(translateName, \"(\").concat(pos * zoom, \"px)\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.dragger = new Dragger(this.manager.getElement(), {\n      container: document.body,\n      dragstart: e => {\n        const target = e.inputEvent.target;\n        const datas = e.datas;\n\n        if (target === this.ruler.canvasElement) {\n          e.datas.fromRuler = true;\n          datas.target = this.adderElement; // eslint-disable-next-line no-negated-condition\n        } else if (!hasClass(target, GUIDE)) {\n          return false;\n        } else {\n          datas.target = target;\n        }\n\n        return this.onDragStart(e);\n      },\n      drag: this.onDrag,\n      dragend: this.onDragEnd\n    });\n  }\n\n  componentWillUnmount() {\n    this.dragger.unset();\n  }\n\n  getGuides() {\n    return this.state.guides;\n  }\n\n  scrollGuides(pos) {\n    const _ref3 = this.props,\n          zoom = _ref3.zoom;\n    const guidesElement = this.guidesElement;\n    this.scrollPos = pos;\n    guidesElement.style.transform = \"\".concat(this.getTranslateName(), \"(\").concat(-pos * zoom, \"px)\");\n    const guides = this.state.guides;\n    this.guideElements.forEach((el, i) => {\n      if (!el) {\n        return;\n      }\n\n      el.style.display = -pos + guides[i] < 0 ? \"none\" : \"block\";\n    });\n  }\n\n  resize() {\n    this.ruler.resize();\n  }\n\n  scroll(pos) {\n    this.ruler.scroll(pos);\n  }\n\n  getTranslateName() {\n    return this.props.type === \"horizontal\" ? \"translateY\" : \"translateX\";\n  }\n\n}\nGuides.defaultProps = {\n  className: \"\",\n  type: \"horizontal\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setGuides: () => {},\n  zoom: 1,\n  style: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n};","map":{"version":3,"sources":["/Users/nghiepphan/code/tham-khao/react-moveable-with-full-drag-select/src/guides/Guide.tsx"],"names":["React","ref","refs","prefixCSS","Dragger","hasClass","addClass","removeClass","styled","Ruler","GUIDES","GUIDE","DRAGGING","ADDER","CURRENT","prefix","GuidesElement","Guides","PureComponent","state","guides","currentOffset","adderElement","scrollPos","ruler","manager","guidesElement","dragger","guideElements","onDragStart","datas","clientX","clientY","inputEvent","isHorizontal","props","type","rect","getBoundingClientRect","offset","top","left","target","onDrag","stopPropagation","preventDefault","nextPos","Math","round","style","transform","getTranslateName","setState","onDragEnd","pos","setGuides","guidePos","zoom","fromRuler","indexOf","index","getAttribute","splice","render","className","width","height","unit","rulerStyle","backgroundColor","lineColor","textColor","renderGuides","translateName","map","i","componentDidMount","getElement","container","document","body","dragstart","e","canvasElement","drag","dragend","componentWillUnmount","unset","getGuides","scrollGuides","forEach","el","display","resize","scroll","defaultProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ref, refs, prefixCSS } from \"framework-utils\";\nimport Dragger from \"@daybrush/drag\";\nimport { hasClass, addClass, removeClass } from \"@daybrush/utils\";\nimport styled, { StyledInterface } from \"react-css-styled\";\n\nimport Ruler from \"../ruler\";\n\nimport { GUIDES, GUIDE, DRAGGING, ADDER, CURRENT } from \"./consts\";\nimport { prefix } from \"./utils\";\nimport { GuidesState, GuidesProps, GuidesInterface } from \"./types\";\n\nconst GuidesElement = styled(\n  \"div\",\n  prefixCSS(\n    \"scena-\",\n    `\n{\n    position: relative;\n}\ncanvas {\n    position: relative;\n}\n.guides {\n    position: absolute;\n    top: 0;\n    left: 0;\n    will-change: transform;\n    z-index: 120;\n}\n:host.horizontal .guides {\n    width: 100%;\n    height: 0;\n    top: 0;\n}\n:host.vertical .guides {\n    height: 100%;\n    width: 0;\n    left: 0;\n}\n.guide {\n    position: absolute;\n    background: cyan;\n    z-index: 2;\n}\n.guide.dragging:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n:host.horizontal .guide {\n    width: 100%;\n    height: 1px;\n    cursor: row-resize;\n}\n:host.vertical .guide {\n    width: 1px;\n    height: 100%;\n    cursor: col-resize;\n}\n.mobile :host.horizontal .guide {\n    transform: scale(1, 2);\n}\n.mobile :host.vertical .guide {\n    transform: scale(2, 1);\n}\n:host.horizontal .guide:before {\n    height: 10px;\n}\n:host.vertical .guide:before {\n    width: 10px;\n}\n.adder {\n    display: none;\n}\n.adder.dragging {\n    display: block;\n}\n.current {\n    font-size: 10px;\n}\n\n.current .horizontal {\n    margin-left: 25px;\n}\n`\n  )\n);\n\nexport default class Guides\n  extends React.PureComponent<GuidesProps, GuidesState>\n  implements GuidesInterface {\n  public static defaultProps = {\n    className: \"\",\n    type: \"horizontal\",\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setGuides: () => {},\n    zoom: 1,\n    style: { width: \"100%\", height: \"100%\" }\n  };\n  public state: GuidesState = {\n    guides: [],\n    currentOffset: 0\n  };\n  public adderElement!: HTMLElement;\n  public scrollPos = 0;\n  public ruler!: Ruler;\n  private manager!: StyledInterface;\n  private guidesElement!: HTMLElement;\n  private dragger!: Dragger;\n  private guideElements: HTMLElement[] = [];\n\n  public render() {\n    const {\n      className,\n      type,\n      width,\n      height,\n      unit,\n      zoom,\n      style,\n      rulerStyle,\n      backgroundColor,\n      lineColor,\n      textColor\n    } = this.props as Required<GuidesProps>;\n    return (\n      <GuidesElement\n        ref={ref(this, \"manager\")}\n        className={`${prefix(\"manager\", type)} ${className}`}\n        style={style}\n      >\n        <Ruler\n          ref={ref(this, \"ruler\")}\n          type={type}\n          width={width}\n          height={height}\n          unit={unit}\n          zoom={zoom}\n          backgroundColor={backgroundColor}\n          lineColor={lineColor}\n          style={rulerStyle}\n          textColor={textColor}\n        />\n        <div className={GUIDES} ref={ref(this, \"guidesElement\")}>\n          <div className={ADDER} ref={ref(this, \"adderElement\")}>\n            <span className={CURRENT + \" \" + type}>\n              {this.state.currentOffset}\n            </span>\n          </div>\n          {this.renderGuides()}\n        </div>\n      </GuidesElement>\n    );\n  }\n  public renderGuides() {\n    const { type, zoom } = this.props as Required<GuidesProps>;\n    const translateName = type === \"horizontal\" ? \"translateY\" : \"translateX\";\n    const guides = this.state.guides;\n\n    this.guideElements = [];\n    return guides.map((pos, i) => {\n      return (\n        <div\n          className={prefix(\"guide\", type)}\n          ref={refs(this, \"guideElements\", i)}\n          key={i}\n          data-index={i}\n          style={{\n            transform: `${translateName}(${pos * zoom}px)`\n          }}\n        />\n      );\n    });\n  }\n  public componentDidMount() {\n    this.dragger = new Dragger(this.manager.getElement(), {\n      container: document.body,\n      dragstart: e => {\n        const target = e.inputEvent.target;\n        const datas = e.datas;\n\n        if (target === this.ruler.canvasElement) {\n          e.datas.fromRuler = true;\n          datas.target = this.adderElement;\n          // eslint-disable-next-line no-negated-condition\n        } else if (!hasClass(target, GUIDE)) {\n          return false;\n        } else {\n          datas.target = target;\n        }\n        return this.onDragStart(e);\n      },\n      drag: this.onDrag,\n      dragend: this.onDragEnd\n    });\n  }\n  public componentWillUnmount() {\n    this.dragger.unset();\n  }\n  public getGuides() {\n    return this.state.guides;\n  }\n  public scrollGuides(pos: number) {\n    const { zoom } = this.props as Required<GuidesProps>;\n    const guidesElement = this.guidesElement;\n\n    this.scrollPos = pos;\n    guidesElement.style.transform = `${this.getTranslateName()}(${-pos *\n      zoom}px)`;\n\n    const guides = this.state.guides;\n    this.guideElements.forEach((el, i) => {\n      if (!el) {\n        return;\n      }\n      el.style.display = -pos + guides[i] < 0 ? \"none\" : \"block\";\n    });\n  }\n  public resize() {\n    this.ruler.resize();\n  }\n  public scroll(pos: number) {\n    this.ruler.scroll(pos);\n  }\n  private onDragStart = ({ datas, clientX, clientY, inputEvent }: any) => {\n    const isHorizontal = this.props.type === \"horizontal\";\n    const rect = this.guidesElement.getBoundingClientRect();\n    datas.offset = isHorizontal ? rect.top : rect.left;\n    addClass(datas.target, DRAGGING);\n    this.onDrag({ datas, clientX, clientY });\n\n    inputEvent.stopPropagation();\n    inputEvent.preventDefault();\n  };\n\n  private onDrag = ({ datas, clientX, clientY }: any) => {\n    const type = this.props.type;\n    const isHorizontal = type === \"horizontal\";\n    const nextPos = Math.round(\n      (isHorizontal ? clientY : clientX) - datas.offset\n    );\n\n    datas.target.style.transform = `${this.getTranslateName()}(${nextPos}px)`;\n    this.setState({ currentOffset: nextPos - 20 });\n\n    return nextPos;\n  };\n\n  private onDragEnd = ({ datas, clientX, clientY }: any) => {\n    const pos = this.onDrag({ datas, clientX, clientY });\n    const guides = this.state.guides;\n    const setGuides = this.props.setGuides!;\n    const guidePos = Math.round(pos / this.props.zoom!);\n\n    removeClass(datas.target, DRAGGING);\n\n    if (datas.fromRuler) {\n      if (pos >= this.scrollPos && guides.indexOf(guidePos) < 0) {\n        this.setState(\n          {\n            guides: [...guides, guidePos]\n          },\n          () => {\n            setGuides(this.state.guides);\n          }\n        );\n      }\n    } else {\n      const index = datas.target.getAttribute(\"data-index\");\n\n      if (pos < this.scrollPos || guides.indexOf(guidePos) > -1) {\n        guides.splice(index, 1);\n      } else {\n        guides[index] = guidePos;\n      }\n      this.setState(\n        {\n          guides: [...guides]\n        },\n        () => {\n          setGuides(this.state.guides);\n        }\n      );\n    }\n  };\n\n  private getTranslateName() {\n    return this.props.type === \"horizontal\" ? \"translateY\" : \"translateX\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}