{"ast":null,"code":"var _jsxFileName = \"/Users/nghiepphan/code/tham-khao/react-moveable-with-full-drag-select/src/full-drag-select/component.tsx\";\n// optional polyfill: Optionally add the polyfill and make sure it's\n// required on your dependendencies for unsupporting browsers\nimport 'intersection-observer';\nimport React from 'react';\nimport { areObjectsEqual } from './utils';\nexport default class ReactDragSelectable extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      containerTop: 0,\n      containerLeft: 0,\n      onScreenElements: [],\n      observerIdsCache: []\n    };\n    this.selector = null;\n    this.previousCursorPos = {\n      x: 0,\n      y: 0\n    };\n    this.initialCursorPos = {\n      x: 0,\n      y: 0\n    };\n    this.newCursorPos = {\n      x: 0,\n      y: 0\n    };\n    this.initialScroll = {\n      x: 0,\n      y: 0\n    };\n    this.mouseInteraction = false;\n    this.zoom = 1;\n    this.break = false;\n\n    this.handleRef = r => {\n      this.selector = r;\n    };\n\n    this.autoScrollSpeed = 1;\n    this.observer = new IntersectionObserver(entries => {\n      console.log('called observer');\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('element__selectable');\n\n          if (this.state.onScreenElements.indexOf(entry.target) === -1) {\n            this.setState({\n              onScreenElements: this.state.onScreenElements.concat(entry.target) // [...this.state.onScreenElements, entry.target as HTMLElement | SVGAElement],\n\n            }, () => {\n              if (typeof this.props.onVisibleElementsChange === 'function') {\n                this.props.onVisibleElementsChange(this.state.onScreenElements);\n              }\n            });\n          }\n        } else {\n          entry.target.classList.remove('element__selectable');\n          this.setState({\n            onScreenElements: this.state.onScreenElements.filter(e => e !== entry.target)\n          }, () => {\n            if (typeof this.props.onVisibleElementsChange === 'function') {\n              this.props.onVisibleElementsChange(this.state.onScreenElements);\n            }\n          });\n        }\n      });\n    });\n\n    this.handleMouseDown = event => {\n      if (this.props.locked) {\n        return;\n      }\n\n      if (event.buttons === 1) {\n        this.handleClick(event); // eslint-disable-next-line no-underscore-dangle\n\n        this._startUp(event);\n      } else {\n        event.preventDefault(); // eslint-disable-next-line no-underscore-dangle\n\n        this._end(event);\n      }\n    };\n\n    this.isRightClick = event => {\n      let isRightMB = false;\n\n      if ('which' in event) {\n        // Gecko (Firefox), WebKit (Safari/Chrome) & Opera\n        isRightMB = event.which === 3;\n      } else if ('button' in event) {\n        // IE, Opera\n        isRightMB = event.button === 2;\n      }\n\n      return isRightMB;\n    };\n\n    this.handleClick = event => {\n      if (this.mouseInteraction) {\n        alert('xxx');\n      }\n\n      if (this.isRightClick(event)) {\n        return;\n      }\n\n      const _this$props = this.props,\n            selectAbleClass = _this$props.selectAbleClass,\n            onSelectChange = _this$props.onSelectChange;\n      const target = event.target;\n\n      if (typeof onSelectChange === 'function') {\n        const newTarget = target && target.classList.contains(selectAbleClass) ? target : null;\n        onSelectChange(newTarget, event);\n      }\n    };\n\n    this._startUp = event => this.startUp(event);\n\n    this._handleMove = event => this.handleMove(event);\n\n    this.handleMove = event => {\n      const onMultipleSelectChange = this.props.onMultipleSelectChange;\n\n      if (event.buttons === 1) {\n        event.preventDefault();\n        event.stopPropagation(); // eslint-disable-next-line no-underscore-dangle\n\n        const selectorPos = this._getPosition(event);\n\n        const elements = this.getElementsInArea(selectorPos);\n\n        if (typeof onMultipleSelectChange === 'function') {\n          onMultipleSelectChange(elements, event);\n        }\n\n        if (this.selector) {\n          this.selector.className = '';\n          this.selector.classList.add('lf__selector');\n          this.selector.classList.add(\"mouse__drag_\".concat(selectorPos.direction));\n          this.selector.style.display = 'block'; // hidden unless moved, fix for issue #8\n\n          this.updatePos(this.selector, selectorPos);\n        } // scroll area if area is scrollable\n        // this.autoScroll(event);\n\n      }\n    };\n\n    this._getPosition = event => {\n      // eslint-disable-next-line no-underscore-dangle\n      const cursorPosNew = this._getCursorPos(event, this.props.container);\n\n      const scrollNew = this.getScroll(this.props.container); // save for later retrieval\n\n      this.newCursorPos = cursorPosNew; // if area or document is scrolled those values have to be included aswell\n\n      const scrollAmount = {\n        x: scrollNew.x - this.initialScroll.x,\n        y: scrollNew.y - this.initialScroll.y\n      };\n      const selectorPos = {\n        x: 0,\n        y: 0,\n        w: 0,\n        h: 0,\n        direction: 'LeftUp'\n      };\n      const isAboveX = cursorPosNew.x > this.initialCursorPos.x - scrollAmount.x;\n      const isAboveY = cursorPosNew.y > this.initialCursorPos.y - scrollAmount.y;\n      selectorPos.x = isAboveX ? this.initialCursorPos.x + this.initialScroll.x : cursorPosNew.x + scrollNew.x;\n      selectorPos.w = isAboveX ? cursorPosNew.x - this.initialCursorPos.x + scrollAmount.x : this.initialCursorPos.x - cursorPosNew.x - scrollAmount.x;\n      selectorPos.y = isAboveY ? this.initialCursorPos.y + this.initialScroll.y : cursorPosNew.y + scrollNew.y;\n      selectorPos.h = isAboveY ? cursorPosNew.y - this.initialCursorPos.y + scrollAmount.y : this.initialCursorPos.y - cursorPosNew.y - scrollAmount.y;\n      let direction;\n      direction = cursorPosNew.x - this.initialCursorPos.x > 0 ? 'Left' : 'Right';\n      direction += cursorPosNew.y - this.initialCursorPos.y > 0 ? 'Down' : 'Up';\n      selectorPos.direction = direction;\n      return selectorPos;\n    };\n\n    this.getStartingPositions = event => {\n      this.initialCursorPos = this.getCursorPos(event, this.props.container, true);\n      this.newCursorPos = this.initialCursorPos;\n      this.initialScroll = this.getScroll(this.props.container);\n      const selectorPos = {\n        x: 0,\n        y: 0,\n        w: 0,\n        h: 0,\n        direction: 'LeftUp'\n      };\n      selectorPos.x = this.initialCursorPos.x + this.initialScroll.x;\n      selectorPos.y = this.initialCursorPos.y + this.initialScroll.y;\n      selectorPos.w = 0;\n      selectorPos.h = 0;\n      this.updatePos(this.selector, selectorPos);\n    };\n\n    this.getCursorPos = (event, _area, ignoreScroll) => {\n      if (!event) {\n        return {\n          x: 0,\n          y: 0\n        };\n      }\n\n      const area = _area || this.props.container; // eslint-disable-next-line no-underscore-dangle\n\n      const pos = this._getCursorPos(event, area);\n\n      const scroll = ignoreScroll ? {\n        x: 0,\n        y: 0\n      } : this.getScroll(area);\n\n      if (pos) {\n        return {\n          x: pos.x + scroll.x,\n          y: pos.y + scroll.y\n        };\n      }\n\n      return {\n        x: 0,\n        y: 0\n      };\n    };\n\n    this._getCursorPos = (event, area) => {\n      if (!event) {\n        return {\n          x: 0,\n          y: 0\n        };\n      }\n\n      const cPos = {\n        // event.clientX/Y fallback for <IE8\n        x: event.pageX || event.clientX,\n        y: event.pageY || event.clientY\n      };\n      const areaRect = this.getAreaRect(area || document);\n      const docScroll = this.getScroll(); // needed when document is scrollable but area is not\n\n      if (areaRect) {\n        return {\n          // if itâ€™s constrained in an area the area should be substracted calculate\n          x: (cPos.x - areaRect.left - docScroll.x + this.state.containerLeft) / this.zoom,\n          y: (cPos.y - areaRect.top - docScroll.y + this.state.containerTop) / this.zoom\n        };\n      }\n\n      return {\n        x: 0,\n        y: 0\n      };\n    };\n\n    this.getScroll = area => {\n      const body = {\n        top: document.body.scrollTop > 0 ? document.body.scrollTop : document.documentElement.scrollTop,\n        left: document.body.scrollLeft > 0 ? document.body.scrollLeft : document.documentElement.scrollLeft\n      };\n      let x;\n      let y; // when the rectangle is bound to the document, no scroll is needed\n\n      if (area && area instanceof HTMLElement && area.scrollTop >= 0) {\n        y = area.scrollTop;\n      } else {\n        y = body.top;\n      }\n\n      if (area && area instanceof HTMLElement && area.scrollLeft >= 0) {\n        x = area.scrollLeft;\n      } else {\n        x = body.left;\n      }\n\n      return {\n        x,\n        y\n      };\n    };\n\n    this.getAreaRect = area => {\n      if (area === document) {\n        const size = {\n          y: area.documentElement.clientHeight > 0 ? area.documentElement.clientHeight : window.innerHeight,\n          x: area.documentElement.clientWidth > 0 ? area.documentElement.clientWidth : window.innerWidth\n        };\n        return {\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          width: size.x,\n          height: size.y\n        };\n      } else if (area instanceof HTMLElement) {\n        const rect = area.getBoundingClientRect();\n        return {\n          top: rect.top,\n          left: rect.left,\n          bottom: rect.bottom,\n          right: rect.right,\n          width: area.clientWidth || rect.width,\n          height: area.clientHeight || rect.height\n        };\n      }\n\n      return null;\n    };\n\n    this.isCursorNearEdge = (event, area) => {\n      // eslint-disable-next-line no-underscore-dangle\n      const cursorPosition = this._getCursorPos(event, area);\n\n      const areaRect = this.getAreaRect(document);\n\n      if (!areaRect) {\n        return false;\n      }\n\n      const tolerance = {\n        x: Math.min(areaRect.width / 10, 30),\n        y: Math.min(areaRect.height / 10, 30)\n      };\n\n      if (cursorPosition.y < tolerance.y) {\n        return 'top';\n      } else if (areaRect.height - cursorPosition.y < tolerance.y) {\n        return 'bottom';\n      } else if (areaRect.width - cursorPosition.x < tolerance.x) {\n        return 'right';\n      } else if (cursorPosition.x < tolerance.x) {\n        return 'left';\n      }\n\n      return false;\n    };\n\n    this.autoScroll = event => {\n      const edge = this.isCursorNearEdge(event, this.props.container);\n      const docEl = document && document.documentElement && document.documentElement.scrollTop && document.documentElement;\n      /*eslint-disable no-underscore-dangle*/\n\n      const _area = document.documentElement; // this.props.container === document ? docEl || document.body : this.props.container;\n\n      if (!_area) {\n        return;\n      }\n\n      if (edge === 'top' && _area.scrollTop > 0) {\n        _area.scrollTop -= Number(this.autoScrollSpeed);\n      } else if (edge === 'bottom') {\n        _area.scrollTop += Number(this.autoScrollSpeed);\n      } else if (edge === 'left' && _area.scrollLeft > 0) {\n        _area.scrollLeft -= Number(this.autoScrollSpeed);\n      } else if (edge === 'right') {\n        _area.scrollLeft += Number(this.autoScrollSpeed);\n      }\n      /*eslint-enable*/\n\n    };\n\n    this.updatePos = (node, pos) => {\n      node.style.left = pos ? pos.x + 'px' : '0';\n      node.style.top = pos.y + 'px';\n      node.style.width = pos.w + 'px';\n      node.style.height = pos.h + 'px';\n      return node;\n    };\n\n    this._end = event => this.reset(event, false);\n\n    this.reset = (event, withCallback) => {\n      /*eslint-disable no-underscore-dangle*/\n      if (this.props.container) {\n        this.previousCursorPos = this._getCursorPos(event, this.props.container);\n        this.props.container.removeEventListener('mouseup', this._end);\n        this.props.container.removeEventListener('mousemove', this._handleMove);\n        this.props.container.addEventListener('mousedown', this._startUp);\n      }\n\n      if (this.break) {\n        return false;\n      }\n\n      this.resetSelector(); // debounce in order \"onClick\" to work\n\n      setTimeout(() => {\n        this.mouseInteraction = false;\n      }, 100);\n      return null;\n    };\n\n    this.getElementsInArea = ({\n      x,\n      y,\n      w,\n      h,\n      direction\n    }) => {\n      const crossingSelect = direction === 'RightUp' || direction === 'RightDown';\n      return this.state.onScreenElements.filter(element => {\n        const bound = element.getBoundingClientRect().toJSON();\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n        if (bound.left && bound.top && bound.width && bound.height && bound.right && bound.bottom) {\n          bound.x += scrollLeft;\n          bound.left += scrollLeft;\n          bound.y += scrollTop;\n          bound.top += scrollTop;\n          bound.bottom += scrollTop;\n          bound.right += scrollLeft;\n\n          if (crossingSelect) {\n            const notInterSect = bound.left > x + w || bound.right < x || bound.top > y + h || bound.bottom < y;\n\n            if (!notInterSect) {\n              return element;\n            }\n          } else if (bound.left > x && bound.left + bound.width < x + w && bound.top > y && bound.top + bound.height < y + h) {\n            return element;\n          }\n        }\n\n        return null;\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.handleRef,\n        id: \"lf-selector\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 30,\n          right: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 9\n        }\n      }, \"Selectables: \".concat(this.state.onScreenElements.length)));\n    };\n  }\n\n  componentDidMount() {\n    const container = this.props.container;\n\n    if (container) {\n      container.addEventListener('mousedown', this.handleMouseDown);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.container && nextProps.container !== this.props.container) {\n      nextProps.container.addEventListener('mousedown', this.handleMouseDown); // set container offset if container is not Document\n\n      if (nextProps.container instanceof HTMLElement) {\n        const containerRect = nextProps.container.getBoundingClientRect().toJSON();\n        this.setState({\n          containerTop: containerRect.top,\n          containerLeft: containerRect.left\n        });\n      }\n    }\n\n    if (!areObjectsEqual(nextProps.selectables, this.props.selectables)) {\n      Object.keys(nextProps.selectables).forEach(id => {\n        const element = nextProps.selectables[id];\n\n        if (this.state.observerIdsCache.indexOf(id) === -1 && element) {\n          this.setState({\n            observerIdsCache: [...this.state.observerIdsCache, id]\n          }, () => {\n            this.observer.observe(element);\n          });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const container = this.props.container;\n\n    if (container) {\n      container.removeEventListener('mousedown', this.handleMouseDown);\n    }\n\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  startUp(event) {\n    if (event.type === 'touchstart') {\n      event.preventDefault();\n    }\n\n    if (this.props.locked) {\n      return;\n    }\n\n    if (this.isRightClick(event)) {\n      return;\n    }\n\n    this.getStartingPositions(event);\n\n    if (this.props.container) {\n      /*eslint-disable no-underscore-dangle*/\n      this.props.container.removeEventListener('mousedown', this._startUp);\n      this.props.container.addEventListener('mousemove', this._handleMove);\n      this.props.container.addEventListener('mouseup', this._end);\n      /*eslint-enable*/\n    }\n  }\n\n  resetSelector() {\n    if (this.selector) {\n      this.selector.style.width = '0';\n      this.selector.style.height = '0';\n      this.selector.style.left = '0';\n      this.selector.style.right = '0';\n      this.selector.style.top = '0';\n      this.selector.style.display = 'none';\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/nghiepphan/code/tham-khao/react-moveable-with-full-drag-select/src/full-drag-select/component.tsx"],"names":["React","areObjectsEqual","ReactDragSelectable","PureComponent","state","containerTop","containerLeft","onScreenElements","observerIdsCache","selector","previousCursorPos","x","y","initialCursorPos","newCursorPos","initialScroll","mouseInteraction","zoom","break","handleRef","r","autoScrollSpeed","observer","IntersectionObserver","entries","console","log","forEach","entry","isIntersecting","target","classList","add","indexOf","setState","concat","props","onVisibleElementsChange","remove","filter","e","handleMouseDown","event","locked","buttons","handleClick","_startUp","preventDefault","_end","isRightClick","isRightMB","which","button","alert","selectAbleClass","onSelectChange","newTarget","contains","startUp","_handleMove","handleMove","onMultipleSelectChange","stopPropagation","selectorPos","_getPosition","elements","getElementsInArea","className","direction","style","display","updatePos","cursorPosNew","_getCursorPos","container","scrollNew","getScroll","scrollAmount","w","h","isAboveX","isAboveY","getStartingPositions","getCursorPos","_area","ignoreScroll","area","pos","scroll","cPos","pageX","clientX","pageY","clientY","areaRect","getAreaRect","document","docScroll","left","top","body","scrollTop","documentElement","scrollLeft","HTMLElement","size","clientHeight","window","innerHeight","clientWidth","innerWidth","bottom","right","width","height","rect","getBoundingClientRect","isCursorNearEdge","cursorPosition","tolerance","Math","min","autoScroll","edge","docEl","Number","node","reset","withCallback","removeEventListener","addEventListener","resetSelector","setTimeout","crossingSelect","element","bound","toJSON","pageXOffset","pageYOffset","notInterSect","render","position","length","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","nextContext","containerRect","selectables","Object","keys","id","observe","componentWillUnmount","disconnect","type"],"mappings":"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","sourcesContent":["// optional polyfill: Optionally add the polyfill and make sure it's\n// required on your dependendencies for unsupporting browsers\nimport 'intersection-observer';\nimport React from 'react';\nimport {\n  DragSelectableProps,\n  DragSelectableState,\n  MouseDragDirection,\n  SelectorPosition,\n} from './types';\nimport { areObjectsEqual } from './utils';\n\nexport default class ReactDragSelectable extends React.PureComponent<\n  DragSelectableProps,\n  DragSelectableState\n> {\n  state: DragSelectableState = {\n    containerTop: 0,\n    containerLeft: 0,\n    onScreenElements: [],\n    observerIdsCache: [],\n  };\n\n  private selector: HTMLElement | null = null;\n  private previousCursorPos: { x: number; y: number } = { x: 0, y: 0 };\n  private initialCursorPos: { x: number; y: number } = { x: 0, y: 0 };\n  private newCursorPos: { x: number; y: number } = { x: 0, y: 0 };\n  private initialScroll: { x: number; y: number } = { x: 0, y: 0 };\n  private mouseInteraction: boolean = false as boolean;\n  private zoom: number = 1 as number;\n  private break = false;\n  private handleRef: any = (r: any) => {\n    this.selector = r;\n  };\n  private autoScrollSpeed: number = 1 as number;\n\n  componentDidMount(): void {\n    const { container } = this.props;\n    if (container) {\n      container.addEventListener('mousedown', this.handleMouseDown);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(\n    nextProps: Readonly<DragSelectableProps> | any,\n    nextContext: any\n  ): void {\n    if (nextProps.container && nextProps.container !== this.props.container) {\n      nextProps.container.addEventListener('mousedown', this.handleMouseDown);\n\n      // set container offset if container is not Document\n      if (nextProps.container instanceof HTMLElement) {\n        const containerRect = nextProps.container\n          .getBoundingClientRect()\n          .toJSON();\n        this.setState({\n          containerTop: containerRect.top,\n          containerLeft: containerRect.left,\n        });\n      }\n    }\n\n    if (!areObjectsEqual(nextProps.selectables, this.props.selectables)) {\n      Object.keys(nextProps.selectables).forEach((id) => {\n        const element = nextProps.selectables[id];\n        if (this.state.observerIdsCache.indexOf(id) === -1 && element) {\n          this.setState(\n            {\n              observerIdsCache: [...this.state.observerIdsCache, id],\n            },\n            () => {\n              this.observer.observe(element);\n            }\n          );\n        }\n      });\n    }\n  }\n\n  private observer = new IntersectionObserver((entries) => {\n    console.log('called observer');\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('element__selectable');\n        if (\n          this.state.onScreenElements.indexOf(\n            entry.target as HTMLElement | SVGAElement\n          ) === -1\n        ) {\n          this.setState(\n            {\n              onScreenElements: this.state.onScreenElements.concat(\n                entry.target as HTMLElement | SVGAElement\n              ), // [...this.state.onScreenElements, entry.target as HTMLElement | SVGAElement],\n            },\n            () => {\n              if (typeof this.props.onVisibleElementsChange === 'function') {\n                this.props.onVisibleElementsChange(this.state.onScreenElements);\n              }\n            }\n          );\n        }\n      } else {\n        entry.target.classList.remove('element__selectable');\n        this.setState(\n          {\n            onScreenElements: this.state.onScreenElements.filter(\n              (e) => e !== entry.target\n            ),\n          },\n          () => {\n            if (typeof this.props.onVisibleElementsChange === 'function') {\n              this.props.onVisibleElementsChange(this.state.onScreenElements);\n            }\n          }\n        );\n      }\n    });\n  });\n\n  componentWillUnmount(): void {\n    const { container } = this.props;\n    if (container) {\n      container.removeEventListener('mousedown', this.handleMouseDown);\n    }\n\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  private handleMouseDown: any = (event: MouseEvent) => {\n    if (this.props.locked) {\n      return;\n    }\n    if (event.buttons === 1) {\n      this.handleClick(event);\n      // eslint-disable-next-line no-underscore-dangle\n      this._startUp(event);\n    } else {\n      event.preventDefault();\n      // eslint-disable-next-line no-underscore-dangle\n      this._end(event);\n    }\n  };\n\n  isRightClick = (event: any) => {\n    let isRightMB = false;\n    if ('which' in event) {\n      // Gecko (Firefox), WebKit (Safari/Chrome) & Opera\n      isRightMB = event.which === 3;\n    } else if ('button' in event) {\n      // IE, Opera\n      isRightMB = event.button === 2;\n    }\n    return isRightMB;\n  };\n\n  handleClick = (event: MouseEvent) => {\n    if (this.mouseInteraction) {\n      alert('xxx');\n    }\n\n    if (this.isRightClick(event)) {\n      return;\n    }\n\n    const { selectAbleClass, onSelectChange } = this.props;\n\n    const target = event.target as HTMLElement | SVGAElement;\n    if (typeof onSelectChange === 'function') {\n      const newTarget =\n        target && target.classList.contains(selectAbleClass) ? target : null;\n      onSelectChange(newTarget, event);\n    }\n  };\n\n  private _startUp: any = (event: MouseEvent) => this.startUp(event);\n  private startUp(event: MouseEvent) {\n    if (event.type === 'touchstart') {\n      event.preventDefault();\n    }\n\n    if (this.props.locked) {\n      return;\n    }\n\n    if (this.isRightClick(event)) {\n      return;\n    }\n\n    this.getStartingPositions(event);\n\n    if (this.props.container) {\n      /*eslint-disable no-underscore-dangle*/\n      this.props.container.removeEventListener('mousedown', this._startUp);\n      this.props.container.addEventListener('mousemove', this._handleMove);\n      this.props.container.addEventListener('mouseup', this._end);\n      /*eslint-enable*/\n    }\n  }\n\n  _handleMove: any = (event: MouseEvent) => this.handleMove(event);\n  handleMove = (event: MouseEvent) => {\n    const { onMultipleSelectChange } = this.props;\n\n    if (event.buttons === 1) {\n      event.preventDefault();\n      event.stopPropagation();\n      // eslint-disable-next-line no-underscore-dangle\n      const selectorPos = this._getPosition(event);\n\n      const elements = this.getElementsInArea(selectorPos);\n      if (typeof onMultipleSelectChange === 'function') {\n        onMultipleSelectChange(elements, event);\n      }\n\n      if (this.selector) {\n        this.selector.className = '';\n        this.selector.classList.add('lf__selector');\n        this.selector.classList.add(`mouse__drag_${selectorPos.direction}`);\n        this.selector.style.display = 'block'; // hidden unless moved, fix for issue #8\n\n        this.updatePos(this.selector, selectorPos);\n      }\n\n      // scroll area if area is scrollable\n      // this.autoScroll(event);\n    }\n  };\n\n  _getPosition = (event: MouseEvent) => {\n    // eslint-disable-next-line no-underscore-dangle\n    const cursorPosNew = this._getCursorPos(event, this.props.container);\n    const scrollNew = this.getScroll(this.props.container);\n\n    // save for later retrieval\n    this.newCursorPos = cursorPosNew;\n\n    // if area or document is scrolled those values have to be included aswell\n    const scrollAmount = {\n      x: scrollNew.x - this.initialScroll.x,\n      y: scrollNew.y - this.initialScroll.y,\n    };\n\n    const selectorPos: SelectorPosition = {\n      x: 0,\n      y: 0,\n      w: 0,\n      h: 0,\n      direction: 'LeftUp',\n    };\n\n    const isAboveX = cursorPosNew.x > this.initialCursorPos.x - scrollAmount.x;\n    const isAboveY = cursorPosNew.y > this.initialCursorPos.y - scrollAmount.y;\n\n    selectorPos.x = isAboveX\n      ? this.initialCursorPos.x + this.initialScroll.x\n      : cursorPosNew.x + scrollNew.x;\n    selectorPos.w = isAboveX\n      ? cursorPosNew.x - this.initialCursorPos.x + scrollAmount.x\n      : this.initialCursorPos.x - cursorPosNew.x - scrollAmount.x;\n\n    selectorPos.y = isAboveY\n      ? this.initialCursorPos.y + this.initialScroll.y\n      : cursorPosNew.y + scrollNew.y;\n    selectorPos.h = isAboveY\n      ? cursorPosNew.y - this.initialCursorPos.y + scrollAmount.y\n      : this.initialCursorPos.y - cursorPosNew.y - scrollAmount.y;\n\n    let direction;\n    direction = cursorPosNew.x - this.initialCursorPos.x > 0 ? 'Left' : 'Right';\n    direction += cursorPosNew.y - this.initialCursorPos.y > 0 ? 'Down' : 'Up';\n    selectorPos.direction = direction as MouseDragDirection;\n\n    return selectorPos;\n  };\n\n  getStartingPositions = (event: MouseEvent) => {\n    this.initialCursorPos = this.getCursorPos(\n      event,\n      this.props.container,\n      true\n    );\n    this.newCursorPos = this.initialCursorPos;\n    this.initialScroll = this.getScroll(this.props.container);\n\n    const selectorPos: SelectorPosition = {\n      x: 0,\n      y: 0,\n      w: 0,\n      h: 0,\n      direction: 'LeftUp',\n    };\n    selectorPos.x = this.initialCursorPos.x + this.initialScroll.x;\n    selectorPos.y = this.initialCursorPos.y + this.initialScroll.y;\n    selectorPos.w = 0;\n    selectorPos.h = 0;\n    this.updatePos(this.selector as HTMLElement, selectorPos);\n  };\n\n  getCursorPos = (\n    event: MouseEvent,\n    _area: Document | HTMLElement | null,\n    ignoreScroll: boolean\n  ) => {\n    if (!event) {\n      return { x: 0, y: 0 };\n    }\n\n    const area = _area || this.props.container;\n    // eslint-disable-next-line no-underscore-dangle\n    const pos = this._getCursorPos(event, area);\n    const scroll = ignoreScroll ? { x: 0, y: 0 } : this.getScroll(area);\n\n    if (pos) {\n      return {\n        x: pos.x + scroll.x,\n        y: pos.y + scroll.y,\n      };\n    }\n\n    return { x: 0, y: 0 };\n  };\n\n  _getCursorPos = (event: MouseEvent, area: HTMLElement | Document | null) => {\n    if (!event) {\n      return { x: 0, y: 0 };\n    }\n\n    const cPos = {\n      // event.clientX/Y fallback for <IE8\n      x: event.pageX || event.clientX,\n      y: event.pageY || event.clientY,\n    };\n\n    const areaRect = this.getAreaRect(area || document);\n    const docScroll = this.getScroll(); // needed when document is scrollable but area is not\n    if (areaRect) {\n      return {\n        // if itâ€™s constrained in an area the area should be substracted calculate\n        x:\n          (cPos.x - areaRect.left - docScroll.x + this.state.containerLeft) /\n          this.zoom,\n        y:\n          (cPos.y - areaRect.top - docScroll.y + this.state.containerTop) /\n          this.zoom,\n      };\n    }\n\n    return { x: 0, y: 0 };\n  };\n\n  getScroll = (area?: HTMLElement | Document | null) => {\n    const body = {\n      top:\n        document.body.scrollTop > 0\n          ? document.body.scrollTop\n          : document.documentElement.scrollTop,\n      left:\n        document.body.scrollLeft > 0\n          ? document.body.scrollLeft\n          : document.documentElement.scrollLeft,\n    };\n\n    let x;\n    let y;\n\n    // when the rectangle is bound to the document, no scroll is needed\n    if (area && area instanceof HTMLElement && area.scrollTop >= 0) {\n      y = area.scrollTop;\n    } else {\n      y = body.top;\n    }\n\n    if (area && area instanceof HTMLElement && area.scrollLeft >= 0) {\n      x = area.scrollLeft;\n    } else {\n      x = body.left;\n    }\n\n    return { x, y };\n  };\n\n  getAreaRect = (area: HTMLElement | Document | null) => {\n    if (area === document) {\n      const size = {\n        y:\n          area.documentElement.clientHeight > 0\n            ? area.documentElement.clientHeight\n            : window.innerHeight,\n        x:\n          area.documentElement.clientWidth > 0\n            ? area.documentElement.clientWidth\n            : window.innerWidth,\n      };\n      return {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: size.x,\n        height: size.y,\n      };\n    } else if (area instanceof HTMLElement) {\n      const rect = area.getBoundingClientRect();\n      return {\n        top: rect.top,\n        left: rect.left,\n        bottom: rect.bottom,\n        right: rect.right,\n        width: area.clientWidth || rect.width,\n        height: area.clientHeight || rect.height,\n      };\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the selector is near an edge of the area\n   * @param {Object} [event] event object.\n   * @param {(HTMLElement|SVGElement)} area the area.\n   * @return {('top'|'bottom'|'left'|'right'|false)}\n   */\n  isCursorNearEdge = (\n    event: MouseEvent,\n    area: HTMLElement | Document | null\n  ) => {\n    // eslint-disable-next-line no-underscore-dangle\n    const cursorPosition = this._getCursorPos(event, area);\n    const areaRect = this.getAreaRect(document);\n    if (!areaRect) {\n      return false;\n    }\n    const tolerance = {\n      x: Math.min(areaRect.width / 10, 30),\n      y: Math.min(areaRect.height / 10, 30),\n    };\n\n    if (cursorPosition.y < tolerance.y) {\n      return 'top';\n    } else if (areaRect.height - cursorPosition.y < tolerance.y) {\n      return 'bottom';\n    } else if (areaRect.width - cursorPosition.x < tolerance.x) {\n      return 'right';\n    } else if (cursorPosition.x < tolerance.x) {\n      return 'left';\n    }\n    return false;\n  };\n\n  /**\n   * Automatically Scroll the area by selecting\n   * @param {Object} event â€“ event object.\n   * @private\n   */\n  autoScroll = (event: MouseEvent) => {\n    const edge = this.isCursorNearEdge(event, this.props.container);\n    const docEl =\n      document &&\n      document.documentElement &&\n      document.documentElement.scrollTop &&\n      document.documentElement;\n\n    /*eslint-disable no-underscore-dangle*/\n    const _area = document.documentElement; // this.props.container === document ? docEl || document.body : this.props.container;\n    if (!_area) {\n      return;\n    }\n    if (edge === 'top' && _area.scrollTop > 0) {\n      _area.scrollTop -= Number(this.autoScrollSpeed);\n    } else if (edge === 'bottom') {\n      _area.scrollTop += Number(this.autoScrollSpeed);\n    } else if (edge === 'left' && _area.scrollLeft > 0) {\n      _area.scrollLeft -= Number(this.autoScrollSpeed);\n    } else if (edge === 'right') {\n      _area.scrollLeft += Number(this.autoScrollSpeed);\n    }\n    /*eslint-enable*/\n  };\n\n  updatePos = (node: HTMLElement, pos: SelectorPosition) => {\n    node.style.left = pos ? pos.x + 'px' : '0';\n    node.style.top = pos.y + 'px';\n    node.style.width = pos.w + 'px';\n    node.style.height = pos.h + 'px';\n    return node;\n  };\n\n  _end: any = (event: MouseEvent) => this.reset(event, false);\n  reset = (event: MouseEvent, withCallback: boolean) => {\n    /*eslint-disable no-underscore-dangle*/\n    if (this.props.container) {\n      this.previousCursorPos = this._getCursorPos(event, this.props.container);\n      this.props.container.removeEventListener('mouseup', this._end);\n      this.props.container.removeEventListener('mousemove', this._handleMove);\n      this.props.container.addEventListener('mousedown', this._startUp);\n    }\n\n    if (this.break) {\n      return false;\n    }\n\n    this.resetSelector();\n\n    // debounce in order \"onClick\" to work\n    setTimeout(() => {\n      this.mouseInteraction = false;\n    }, 100);\n\n    return null;\n  };\n\n  private resetSelector() {\n    if (this.selector) {\n      this.selector.style.width = '0';\n      this.selector.style.height = '0';\n      this.selector.style.left = '0';\n      this.selector.style.right = '0';\n      this.selector.style.top = '0';\n      this.selector.style.display = 'none';\n    }\n  }\n\n  public getElementsInArea = ({ x, y, w, h, direction }: SelectorPosition) => {\n    const crossingSelect = direction === 'RightUp' || direction === 'RightDown';\n    return this.state.onScreenElements.filter((element: any) => {\n      const bound = element.getBoundingClientRect().toJSON();\n\n      const scrollLeft =\n        window.pageXOffset || document.documentElement.scrollLeft;\n      const scrollTop =\n        window.pageYOffset || document.documentElement.scrollTop;\n\n      if (\n        bound.left &&\n        bound.top &&\n        bound.width &&\n        bound.height &&\n        bound.right &&\n        bound.bottom\n      ) {\n        bound.x += scrollLeft;\n        bound.left += scrollLeft;\n        bound.y += scrollTop;\n        bound.top += scrollTop;\n        bound.bottom += scrollTop;\n        bound.right += scrollLeft;\n\n        if (crossingSelect) {\n          const notInterSect =\n            bound.left > x + w ||\n            bound.right < x ||\n            bound.top > y + h ||\n            bound.bottom < y;\n          if (!notInterSect) {\n            return element;\n          }\n        } else if (\n          bound.left > x &&\n          bound.left + bound.width < x + w &&\n          bound.top > y &&\n          bound.top + bound.height < y + h\n        ) {\n          return element;\n        }\n      }\n\n      return null;\n    });\n  };\n\n  render = () => {\n    return (\n      <React.Fragment>\n        <div\n          ref={this.handleRef}\n          id=\"lf-selector\"\n          style={{ display: 'none' }}\n        />\n        <div\n          style={{\n            position: 'fixed',\n            top: 30,\n            right: 15,\n          }}\n        >\n          {`Selectables: ${this.state.onScreenElements.length}`}\n        </div>\n      </React.Fragment>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}